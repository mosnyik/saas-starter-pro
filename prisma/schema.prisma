// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id // Firebase UID
  email     String   @unique
  firstName String
  lastName  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Multi-tenant relationships
  tenants TenantMember[]
  
  // Notifications
  notifications Notification[]

  @@map("users")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  plan      Plan     @default(STARTER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Stripe integration
  stripeCustomerId       String?
  stripeSubscriptionId   String?
  stripePriceId          String?
  stripeCurrentPeriodEnd DateTime?

  // Multi-tenant relationships
  members TenantMember[]

  @@map("tenants")
}

model TenantMember {
  id       String     @id @default(cuid())
  userId   String
  tenantId String
  role     TenantRole @default(MEMBER)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([userId, tenantId])
  @@map("tenant_members")
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  title     String
  message   String?
  type      NotificationType @default(INFO)
  read      Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("notifications")
}

enum Role {
  USER
  ADMIN
}

enum TenantRole {
  OWNER
  ADMIN
  MEMBER
  GUEST
}

enum Plan {
  STARTER
  PROFESSIONAL
  ENTERPRISE
}

enum NotificationType {
  INFO
  SUCCESS
  WARNING
  ERROR
}
